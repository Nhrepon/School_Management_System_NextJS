// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Add your models here
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
} 

model Student{
  id String @id
  userName String @unique
  name String
  email String?
  mobile String?
  address String
  image String?
  bloodGroup String
  sex UserSex
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  parentId String
  parent Parent @relation(fields: [parentId], references: [id])
  classId Int
  class Class @relation(fields: [classId], references: [id])
}
enum UserSex{
  Male
  Female
}

model Parent{
  id String @id
  userName String @unique
  name String
  email String?
  mobile String?
  address String
  image String?
  bloodGroup String
  sex UserSex
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  student Student[]
}

model Teacher{
  id String @id
  userName String @unique
  name String
  email String?
  mobile String?
  address String
  image String?
  bloodGroup String
  sex UserSex
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  subjects Subject[]
  lessons Lesson[]
  classes Class[]
}

// model Grade{}

model Class{
  id Int @id @default(autoincrement())
  name String @unique
  capacity Int
  lesson Lesson[]
  supervisorId String
  supervisor Teacher @relation(fields: [supervisorId], references: [id])
  student Student[]
}

model Subject{
  id Int @id @default(autoincrement())
  name String @unique
  teachers Teacher[]
  lesson Lesson[]
}

model Lesson{
  id Int @id @default(autoincrement())
  name String
  day Day
  startTime DateTime
  endTime DateTime
  subjectId Int
  subject Subject @relation(fields: [subjectId], references: [id])
  classId Int
  class Class @relation(fields: [classId], references: [id])
  teacherId String
  teacher Teacher @relation(fields: [teacherId], references: [id])
}
enum Day{
  Saturday
  Sunday
  Monday
  Tuesday
  Wednesday
  Thursday
}
// model Exam{}

// model Assignment{}

// model Result{}

// model Attendance{}

// model Event{}

// model Announcement{}

